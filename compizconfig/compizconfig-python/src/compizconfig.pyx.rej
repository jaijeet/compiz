--- compizconfig/compizconfig-python/src/compizconfig.pyx
+++ compizconfig/compizconfig-python/src/compizconfig.pyx
@@ -1,4 +1,5 @@
-# cython: c_string_type=str, c_string_encoding=ascii, language_level=3
+# cython: c_string_type=str, c_string_encoding=utf8, language_level=3
+
 '''
 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public License
@@ -471,9 +472,9 @@ cdef CCSSettingValue * EncodeValue (object       data,
     else:
         t = ccsSettingGetType (setting)
     if t == TypeString:
-        bv.value.asString = strdup (data)
+        bv.value.asString = strdup (data.encode ("utf-8"))
     elif t == TypeMatch:
-        bv.value.asMatch = strdup (data)
+        bv.value.asMatch = strdup (data.encode ("utf-8"))
     elif t == TypeInt:
         bv.value.asInt = data
     elif t == TypeFloat:
@@ -489,11 +490,11 @@ cdef CCSSettingValue * EncodeValue (object       data,
         bv.value.asColor.color.blue = data[2]
         bv.value.asColor.color.alpha = data[3]
     elif t == TypeKey:
-        ccsStringToKeyBinding (data, &bv.value.asKey)
+        ccsStringToKeyBinding (data.encode ("utf-8"), &bv.value.asKey)
     elif t == TypeButton:
-        ccsStringToButtonBinding (data, &bv.value.asButton)
+        ccsStringToButtonBinding (data.encode ("utf-8"), &bv.value.asButton)
     elif t == TypeEdge:
-        bv.value.asEdge = ccsStringToEdges (data)
+        bv.value.asEdge = ccsStringToEdges (data.encode ("utf-8"))
     elif t == TypeBell:
         if (data):
             bv.value.asBell = 1
@@ -591,7 +592,7 @@ cdef class Setting:
         cdef CCSSettingType t
         cdef CCSSettingInfo * i
 
-        self.ccsSetting = ccsFindSetting (plugin.ccsPlugin, name)
+        self.ccsSetting = ccsFindSetting (plugin.ccsPlugin, name.encode ("utf-8"))
         self.plugin = plugin
 
         self.extendedStrRestrictions = None
@@ -717,7 +718,7 @@ cdef class Plugin:
     cdef object hasExtendedString
     
     def __cinit__ (self, Context context, name):
-        self.ccsPlugin = ccsFindPlugin (context.ccsContext, name)
+        self.ccsPlugin = ccsFindPlugin (context.ccsContext, name.encode ("utf-8"))
         self.context = context
         self.screen = {}
         self.groups = {}
@@ -1037,7 +1038,7 @@ cdef class Profile:
 
     def __cinit__ (self, Context context, name):
         self.context = context
-        self.name = strdup (name)
+        self.name = strdup (name.encode ("utf-8"))
 
     def __dealloc__ (self):
         free (self.name)
@@ -1059,9 +1060,9 @@ cdef class Backend:
 
     def __cinit__ (self, Context context, info):
         self.context = context
-        self.name = strdup (info[0])
-        self.shortDesc = strdup (info[1])
-        self.longDesc = strdup (info[2])
+        self.name = strdup (info[0].encode ("utf-8"))
+        self.shortDesc = strdup (info[1].encode ("utf-8"))
+        self.longDesc = strdup (info[2].encode ("utf-8"))
         self.profileSupport = bool (info[3])
         self.integrationSupport = bool (info[4])
     
@@ -1226,13 +1227,13 @@ cdef class Context:
         ccsReadSettings (self.ccsContext)
 
     def Import (self, path, autoSave = True):
-        ret = bool (ccsImportFromFile (self.ccsContext, path, True))
+        ret = bool (ccsImportFromFile (self.ccsContext, path.encode ("utf-8"), True))
         if autoSave:
             ccsWriteSettings (self.ccsContext)
         return ret
 
     def Export (self, path, skipDefaults = False):
-        return bool (ccsExportToFile (self.ccsContext, path, skipDefaults))
+        return bool (ccsExportToFile (self.ccsContext, path.encode ("utf-8"), skipDefaults))
 
     property Plugins:
         def __get__ (self):
@@ -1247,7 +1248,7 @@ cdef class Context:
             return self.currentProfile
         def __set__ (self, profile):
             self.currentProfile = profile
-            ccsSetProfile (self.ccsContext, profile.Name)
+            ccsSetProfile (self.ccsContext, profile.Name.encode ("utf-8"))
             ccsReadSettings (self.ccsContext)
 
     property Profiles:
@@ -1259,7 +1260,7 @@ cdef class Context:
             return self.currentBackend
         def __set__ (self, backend):
             self.currentBackend = backend
-            ccsSetBackend (self.ccsContext, backend.Name)
+            ccsSetBackend (self.ccsContext, backend.Name.encode ("utf-8"))
             ccsReadSettings (self.ccsContext)
 
     property Backends:
